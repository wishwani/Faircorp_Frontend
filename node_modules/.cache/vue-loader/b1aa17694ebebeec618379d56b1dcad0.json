{"remainingRequest":"/Users/sathish.bowatta/Documents/Faircorp-Frontend/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/Users/sathish.bowatta/Documents/Faircorp-Frontend/src/components/RoomsList.vue?vue&type=template&id=3c529e94","dependencies":[{"path":"/Users/sathish.bowatta/Documents/Faircorp-Frontend/src/components/RoomsList.vue","mtime":1668360589918},{"path":"/Users/sathish.bowatta/Documents/Faircorp-Frontend/node_modules/cache-loader/dist/cjs.js","mtime":1640706934000},{"path":"/Users/sathish.bowatta/Documents/Faircorp-Frontend/node_modules/babel-loader/lib/index.js","mtime":1640706934000},{"path":"/Users/sathish.bowatta/Documents/Faircorp-Frontend/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1640706934000},{"path":"/Users/sathish.bowatta/Documents/Faircorp-Frontend/node_modules/cache-loader/dist/cjs.js","mtime":1640706934000},{"path":"/Users/sathish.bowatta/Documents/Faircorp-Frontend/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js","mtime":1640706934000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CjxkaXYgY2xhc3M9ImFjY29yZGlvbiIgaWQ9ImFjY29yZGlvbiI+CiAgICA8cm9vbXMtbGlzdC1pdGVtIAogICAgICB2LWZvcj0icm9vbSBpbiByb29tcyIKICAgICAgOnJvb209InJvb20iCiAgICAgIDprZXk9InJvb20uaWQiCiAgICAgIEByb29tLXVwZGF0ZWQ9InVwZGF0ZVJvb20iCiAgICAgIEByb29tLWRlbGV0ZWQ9ImRlbGV0ZVJvb20iCiAgICA+CiAgICA8L3Jvb21zLWxpc3QtaXRlbT4KICAgIDxyb29tLW5ldwogICAgICBAcm9vbS1hZGRlZD0iYWRkUm9vbSIKICAgID4KICAgIDwvcm9vbS1uZXc+CjwvZGl2PgogIAo="},{"version":3,"sources":["/Users/sathish.bowatta/Documents/Faircorp-Frontend/src/components/RoomsList.vue"],"names":[],"mappings":";AACA,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACjC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;MACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC3B;IACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACtB;IACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACd,CAAC,CAAC,CAAC,CAAC,CAAC","file":"/Users/sathish.bowatta/Documents/Faircorp-Frontend/src/components/RoomsList.vue","sourceRoot":"","sourcesContent":["<template>\n<div class=\"accordion\" id=\"accordion\">\n    <rooms-list-item \n      v-for=\"room in rooms\"\n      :room=\"room\"\n      :key=\"room.id\"\n      @room-updated=\"updateRoom\"\n      @room-deleted=\"deleteRoom\"\n    >\n    </rooms-list-item>\n    <room-new\n      @room-added=\"addRoom\"\n    >\n    </room-new>\n</div>\n  \n</template>\n\n\n<script>\nimport axios from 'axios';\nimport {API_HOST} from '../config';\nimport RoomsListItem from './RoomsListItem';\nimport RoomNew from './RoomNew.vue';\n\nexport default {\n  components: {\n      RoomsListItem,\n      RoomNew\n  },\n  name: 'RoomsList',\n  data: function() {\n    return {\n      /* Initialize rooms with an empty array, while waiting for actual data to be retrieved from the API */\n      rooms: []\n    }\n  },\n  created: async function() {\n    /*let response = await axios.get(`${API_HOST}/api/rooms`);*/\n    let response = await axios.get(`${API_HOST}/api/rooms`);\n    let rooms = response.data;\n    this.rooms = rooms;\n  },\n  methods: {\n    deleteRoom(roomId) {\n      let index = this.rooms.findIndex(room => room.id === roomId);\n      if (index > -1) {\n\t      this.rooms.splice(index, 1);\n      }\n    },\n    addRoom(newRoom) {\n      this.rooms.push(newRoom);\n    },\n    updateRoom(newRoom) {\n      let index = this.rooms.findIndex(room => room.id === newRoom.id);\n      this.rooms.splice(index, 1, newRoom);\n\t  }\n  }\n}\n</script>\n"]}]}