{"remainingRequest":"/Users/sathish.bowatta/Documents/Faircorp-Frontend/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/Users/sathish.bowatta/Documents/Faircorp-Frontend/src/components/WindowsList.vue?vue&type=template&id=35fd797e","dependencies":[{"path":"/Users/sathish.bowatta/Documents/Faircorp-Frontend/src/components/WindowsList.vue","mtime":1667222455000},{"path":"/Users/sathish.bowatta/Documents/Faircorp-Frontend/node_modules/cache-loader/dist/cjs.js","mtime":1640706934000},{"path":"/Users/sathish.bowatta/Documents/Faircorp-Frontend/node_modules/babel-loader/lib/index.js","mtime":1640706934000},{"path":"/Users/sathish.bowatta/Documents/Faircorp-Frontend/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1640706934000},{"path":"/Users/sathish.bowatta/Documents/Faircorp-Frontend/node_modules/cache-loader/dist/cjs.js","mtime":1640706934000},{"path":"/Users/sathish.bowatta/Documents/Faircorp-Frontend/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js","mtime":1640706934000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgPGRpdiBjbGFzcz0iYWNjb3JkaW9uIiBpZD0iYWNjb3JkaW9uIj4KICAgIDx3aW5kb3dzLWxpc3QtaXRlbSAKICAgICAgdi1mb3I9IndpbmRvdyBpbiB3aW5kb3dzIgogICAgICA6d2luZG93PSJ3aW5kb3ciCiAgICAgIDprZXk9IndpbmRvdy5pZCIgIAogICAgICBAd2luZG93LXVwZGF0ZWQ9InVwZGF0ZVdpbmRvdyIKICAgICAgQHdpbmRvdy1kZWxldGVkPSJkZWxldGVXaW5kb3ciCiAgICA+CiAgICA8L3dpbmRvd3MtbGlzdC1pdGVtPgogICAgPHdpbmRvdy1uZXcKICAgICAgQHdpbmRvdy1hZGRlZD0iYWRkV2luZG93IgogICAgPgogICAgPC93aW5kb3ctbmV3Pgo8L2Rpdj4K"},{"version":3,"sources":["/Users/sathish.bowatta/Documents/Faircorp-Frontend/src/components/WindowsList.vue"],"names":[],"mappings":";EACE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACnC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACxB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAC7B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC/B;IACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC1B;IACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChB,CAAC,CAAC,CAAC,CAAC,CAAC","file":"/Users/sathish.bowatta/Documents/Faircorp-Frontend/src/components/WindowsList.vue","sourceRoot":"","sourcesContent":["<template>\n  <div class=\"accordion\" id=\"accordion\">\n    <windows-list-item \n      v-for=\"window in windows\"\n      :window=\"window\"\n      :key=\"window.id\"  \n      @window-updated=\"updateWindow\"\n      @window-deleted=\"deleteWindow\"\n    >\n    </windows-list-item>\n    <window-new\n      @window-added=\"addWindow\"\n    >\n    </window-new>\n</div>\n</template>\n\n\n<script>\nimport axios from 'axios';\nimport {API_HOST} from '../config';\nimport WindowsListItem from './WindowsListItem';\nimport WindowNew from './WindowNew.vue';\n\nexport default {\n  components: {\n      WindowsListItem,\n      WindowNew\n  },\n  name: 'WindowsList',\n  data: function() {\n    return {\n      /* Initialize windows with an empty array, while waiting for actual data to be retrieved from the API */\n      windows: []\n    }\n  },\n  created: async function() {\n    /*let response = await axios.get(`${API_HOST}/window`);*/\n   let response = await axios.get(`${API_HOST}/api/windows`);\n    let windows = response.data;\n    this.windows = windows;\n  },\n  methods: {\n    updateWindow(newWindow) {\n      /* Find the place of window objectw ith the same Id in the array, and replace it */\n      let index = this.windows.findIndex(window => window.id === newWindow.id);\n      this.windows.splice(index, 1, newWindow);\n    },\n    deleteWindow(windowId) {\n      let index = this.windows.findIndex(window => window.id === windowId);\n      if (index > -1) {\n\tthis.windows.splice(index, 1);\n      }\n    },\n      addWindow(newWindow) {\n\tthis.windows.push(newWindow);\n    }\n  }\n}\n</script>\n"]}]}