{"remainingRequest":"/Users/sathish.bowatta/Documents/Faircorp_Frontend/node_modules/babel-loader/lib/index.js!/Users/sathish.bowatta/Documents/Faircorp_Frontend/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/sathish.bowatta/Documents/Faircorp_Frontend/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/Users/sathish.bowatta/Documents/Faircorp_Frontend/src/components/RoomsList.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/sathish.bowatta/Documents/Faircorp_Frontend/src/components/RoomsList.vue","mtime":1667234414000},{"path":"/Users/sathish.bowatta/Documents/Faircorp_Frontend/babel.config.js","mtime":1640706934000},{"path":"/Users/sathish.bowatta/Documents/Faircorp_Frontend/node_modules/cache-loader/dist/cjs.js","mtime":1640706934000},{"path":"/Users/sathish.bowatta/Documents/Faircorp_Frontend/node_modules/babel-loader/lib/index.js","mtime":1640706934000},{"path":"/Users/sathish.bowatta/Documents/Faircorp_Frontend/node_modules/cache-loader/dist/cjs.js","mtime":1640706934000},{"path":"/Users/sathish.bowatta/Documents/Faircorp_Frontend/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js","mtime":1640706934000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9zYXRoaXNoLmJvd2F0dGEvRG9jdW1lbnRzL0ZhaXJjb3JwX0Zyb250ZW5kL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZC1pbmRleC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNwbGljZS5qcyI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJzsKaW1wb3J0IHsgQVBJX0hPU1QgfSBmcm9tICcuLi9jb25maWcnOwppbXBvcnQgUm9vbXNMaXN0SXRlbSBmcm9tICcuL1Jvb21zTGlzdEl0ZW0nOwppbXBvcnQgUm9vbU5ldyBmcm9tICcuL1Jvb21OZXcudnVlJzsKZXhwb3J0IGRlZmF1bHQgewogIGNvbXBvbmVudHM6IHsKICAgIFJvb21zTGlzdEl0ZW06IFJvb21zTGlzdEl0ZW0sCiAgICBSb29tTmV3OiBSb29tTmV3CiAgfSwKICBuYW1lOiAnUm9vbXNMaXN0JywKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgLyogSW5pdGlhbGl6ZSByb29tcyB3aXRoIGFuIGVtcHR5IGFycmF5LCB3aGlsZSB3YWl0aW5nIGZvciBhY3R1YWwgZGF0YSB0byBiZSByZXRyaWV2ZWQgZnJvbSB0aGUgQVBJICovCiAgICAgIHJvb21zOiBbXQogICAgfTsKICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uICgpIHsKICAgIHZhciBfY3JlYXRlZCA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgdmFyIHJlc3BvbnNlLCByb29tczsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAyOwogICAgICAgICAgICAgIHJldHVybiBheGlvcy5nZXQoIiIuY29uY2F0KEFQSV9IT1NULCAiL2FwaS9yb29tcyIpKTsKCiAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICByZXNwb25zZSA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgcm9vbXMgPSByZXNwb25zZS5kYXRhOwogICAgICAgICAgICAgIHRoaXMucm9vbXMgPSByb29tczsKCiAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZSwgdGhpcyk7CiAgICB9KSk7CgogICAgZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgICAgcmV0dXJuIF9jcmVhdGVkLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICB9CgogICAgcmV0dXJuIGNyZWF0ZWQ7CiAgfSgpLAogIG1ldGhvZHM6IHsKICAgIGRlbGV0ZVJvb206IGZ1bmN0aW9uIGRlbGV0ZVJvb20ocm9vbUlkKSB7CiAgICAgIHZhciBpbmRleCA9IHRoaXMucm9vbXMuZmluZEluZGV4KGZ1bmN0aW9uIChyb29tKSB7CiAgICAgICAgcmV0dXJuIHJvb20uaWQgPT09IHJvb21JZDsKICAgICAgfSk7CgogICAgICBpZiAoaW5kZXggPiAtMSkgewogICAgICAgIHRoaXMucm9vbXMuc3BsaWNlKGluZGV4LCAxKTsKICAgICAgfQogICAgfSwKICAgIGFkZFJvb206IGZ1bmN0aW9uIGFkZFJvb20obmV3Um9vbSkgewogICAgICB0aGlzLnJvb21zLnB1c2gobmV3Um9vbSk7CiAgICB9LAogICAgdXBkYXRlUm9vbTogZnVuY3Rpb24gdXBkYXRlUm9vbShuZXdSb29tKSB7CiAgICAgIHZhciBpbmRleCA9IHRoaXMucm9vbXMuZmluZEluZGV4KGZ1bmN0aW9uIChyb29tKSB7CiAgICAgICAgcmV0dXJuIHJvb20uaWQgPT09IG5ld1Jvb20uaWQ7CiAgICAgIH0pOwogICAgICB0aGlzLnJvb21zLnNwbGljZShpbmRleCwgMSwgbmV3Um9vbSk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["/Users/sathish.bowatta/Documents/Faircorp_Frontend/src/components/RoomsList.vue"],"names":[],"mappings":";;;;AAoBA,OAAO,KAAP,MAAkB,OAAlB;AACA,SAAQ,QAAR,QAAuB,WAAvB;AACA,OAAO,aAAP,MAA0B,iBAA1B;AACA,OAAO,OAAP,MAAoB,eAApB;AAEA,eAAe;AACb,EAAA,UAAU,EAAE;AACR,IAAA,aAAa,EAAb,aADQ;AAER,IAAA,OAAM,EAAN;AAFQ,GADC;AAKb,EAAA,IAAI,EAAE,WALO;AAMb,EAAA,IAAI,EAAE,gBAAW;AACf,WAAO;AACL;AACA,MAAA,KAAK,EAAE;AAFF,KAAP;AAID,GAXY;AAYb,EAAA,OAAO;AAAA,2EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEc,KAAK,CAAC,GAAN,WAAa,QAAb,gBAFd;;AAAA;AAEH,cAAA,QAFG;AAGH,cAAA,KAHG,GAGK,QAAQ,CAAC,IAHd;AAIP,mBAAK,KAAL,GAAa,KAAb;;AAJO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,KAZM;AAkBb,EAAA,OAAO,EAAE;AACP,IAAA,UADO,sBACI,MADJ,EACY;AACjB,UAAI,KAAI,GAAI,KAAK,KAAL,CAAW,SAAX,CAAqB,UAAA,IAAG;AAAA,eAAK,IAAI,CAAC,EAAL,KAAY,MAAjB;AAAA,OAAxB,CAAZ;;AACA,UAAI,KAAI,GAAI,CAAC,CAAb,EAAgB;AACrB,aAAK,KAAL,CAAW,MAAX,CAAkB,KAAlB,EAAyB,CAAzB;AACK;AACD,KANM;AAOL,IAAA,OAPK,mBAOG,OAPH,EAOY;AACpB,WAAK,KAAL,CAAW,IAAX,CAAgB,OAAhB;AACI,KATI;AAUL,IAAA,UAVK,sBAUM,OAVN,EAUe;AACvB,UAAI,KAAI,GAAI,KAAK,KAAL,CAAW,SAAX,CAAqB,UAAA,IAAG;AAAA,eAAK,IAAI,CAAC,EAAL,KAAY,OAAO,CAAC,EAAzB;AAAA,OAAxB,CAAZ;AACA,WAAK,KAAL,CAAW,MAAX,CAAkB,KAAlB,EAAyB,CAAzB,EAA4B,OAA5B;AACA;AAbQ;AAlBI,CAAf","sourcesContent":["<template>\n<div class=\"accordion\" id=\"accordion\">\n    <rooms-list-item \n      v-for=\"room in rooms\"\n      :room=\"room\"\n      :key=\"room.id\"\n      @room-updated=\"updateRoom\"\n      @room-deleted=\"deleteRoom\"\n    >\n    </rooms-list-item>\n    <room-new\n      @room-added=\"addRoom\"\n    >\n    </room-new>\n</div>\n  \n</template>\n\n\n<script>\nimport axios from 'axios';\nimport {API_HOST} from '../config';\nimport RoomsListItem from './RoomsListItem';\nimport RoomNew from './RoomNew.vue';\n\nexport default {\n  components: {\n      RoomsListItem,\n      RoomNew\n  },\n  name: 'RoomsList',\n  data: function() {\n    return {\n      /* Initialize rooms with an empty array, while waiting for actual data to be retrieved from the API */\n      rooms: []\n    }\n  },\n  created: async function() {\n    /*let response = await axios.get(`${API_HOST}/api/rooms`);*/\n    let response = await axios.get(`${API_HOST}/api/rooms`);\n    let rooms = response.data;\n    this.rooms = rooms;\n  },\n  methods: {\n    deleteRoom(roomId) {\n      let index = this.rooms.findIndex(room => room.id === roomId);\n      if (index > -1) {\n\tthis.rooms.splice(index, 1);\n      }\n    },\n      addRoom(newRoom) {\n\t  this.rooms.push(newRoom);\n      },\n      updateRoom(newRoom) {\n\t  let index = this.rooms.findIndex(room => room.id === newRoom.id);\n\t  this.rooms.splice(index, 1, newRoom);\n\t  }\n  }\n}\n</script>\n"],"sourceRoot":""}]}